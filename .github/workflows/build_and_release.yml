name: Build and Publish EXE

on:
  push:
    branches:
      - main  # You can specify the branch where the workflow will trigger on pushes

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'  # Make sure to match your Python version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Install all dependencies from requirements file
          pip install pyinstaller  # Install PyInstaller

      - name: Run PyInstaller to create EXE
        run: |
          pyinstaller app.spec
        shell: cmd

      - name: Create release artifact
        uses: actions/upload-artifact@v2
        with:
          name: jarvis
          path: dist/jarvis.exe  # Adjust the path if needed to match the output of PyInstaller

  release:
    needs: build
    runs-on: windows-latest
    if: github.event_name == 'push'

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: jarvis

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0.${{ github.run_number }}
          release_name: "Jarvis EXE Build #${{ github.run_number }}"
          draft: false
          prerelease: false

      - name: Upload EXE to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/app.exe  # Path to your EXE
          asset_name: jarvis.exe
          asset_content_type: application/octet-stream